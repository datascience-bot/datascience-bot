# TODO: Find a way to shorten build time.
#   Unfortunately, travis cannot cache docker images. ¯\_(ツ)_/¯
#   Consider deploying image to dockerhub (only when it changes),
#   and pulling the image with each build.
# https://stackoverflow.com/questions/35305492/cache-docker-images-on-travis-ci
# https://docs.docker.com/registry/recipes/mirror/
# https://github.com/travis-ci/travis-ci/issues/5358
env:
  global:
    - >
      IMAGE_TAG=tradingai/bazel
      IMAGE_WORKDIR=/workspaces/datascience-bot
      ENV_FILE=.env
      DOCKER_RUN_FLAGS="--memory=128m --memory-swap=10g --oom-kill-disable --env-file=${ENV_FILE} --volume=$(pwd):${IMAGE_WORKDIR} --workdir=${IMAGE_WORKDIR}"
      BAZEL_FLAGS="--discard_analysis_cache --nokeep_state_after_build --notrack_incremental_state"
  jobs:
    - BAZEL_COMMAND="bazel build //..."
    - BAZEL_COMMAND="bazel test //..."
services:
  - docker
before_install:
  - python --version
  - echo "DATASCIENCE_BOT_USERNAME=${DATASCIENCE_BOT_USERNAME}" >> ${ENV_FILE}
  - echo "DATASCIENCE_BOT_PASSWORD=${DATASCIENCE_BOT_PASSWORD}" >> ${ENV_FILE}
  - echo "DATASCIENCE_BOT_CLIENT_ID=${DATASCIENCE_BOT_CLIENT_ID}" >> ${ENV_FILE}
  - echo "DATASCIENCE_BOT_CLIENT_SECRET=${DATASCIENCE_BOT_CLIENT_SECRET}" >> ${ENV_FILE}
  - docker pull ${IMAGE_TAG}
script:
#   Reduce memory usage to avoid docker 137 (out-of-memory) errors
#   https://docs.bazel.build/versions/2.2.0/memory-saving-mode.html
  - docker run ${DOCKER_RUN_FLAGS} ${IMAGE_TAG} /bin/bash -c "${BAZEL_COMMAND} ${BAZEL_FLAGS}"
